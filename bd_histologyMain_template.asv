
%% Histology main
clearvars -global % releases previous GUIs, if there are any

% EDIT ME :
brainsawPath = '/home';
% registration parameters
orientationType = 'psl'; % psl (for posterior, superior, left), means the first, top left voxel
% is the most posterior, superior, left part of the brain
channelColToRegister = 'green'; % channel you want to register
channelColToTransform = 'red'; % channel you want to use to draw probes
atlasResolution_um = 25; % voxel size. currently in all dimensions, both for atlas and acquired image
atlasSpecies = 'mouse'; % atlas species
atlasType = 'allen'; % atlas name
brainglobeLocation = '/home/julie/.brainglobe/'; % where your brainglobe data lives

animal = 'JF096';

%% ~ Images info

% registration location/files
[atlasLocation, imgToRegister, imgToTransform, outputDir] = ...
    bd_getLocations(brainglobeLocation, brainsawPath, animal, channelColToRegister, ...
    channelColToTransform, atlasType, atlasSpecies, atlasResolution_um);

%% ~ Load in images and template ~
[tv, av, st, bregma] = bd_loadAllenAtlas([atlasLocation.folder, filesep, atlasLocation.name]);

%% ~ Register ~
if isempty(dir([outputDir, filesep, 'downsampled_standard.tiff']))
    % process image
    imgToRegister_processed = bd_preprocessImage([imgToRegister.folder, filesep, imgToRegister.name]);
    % register image
    bd_brainreg([imgToRegister_processed.folder, filesep, imgToRegister_processed.name], outputDir, ...
        [imgToTransform.folder, filesep, imgToTransform.name], orientationType, atlasResolution_um) % run brainreg
    % load image
    registeredImage = loadtiff([outputDir, filesep, 'downsampled_standard.tiff']);
    % generate appropriate formated files
    bd_convertToAPFormat(registeredImage, tv, av, outputDir) % get and save atlas data in standard
else
    % load image
    registeredImage = loadtiff([outputDir, filesep, 'downsampled_standard.tiff']);
end

%% ~ Manually check and adjust registration ~
screenToUse = 2; % on which of your displays to create the following plots. 1 = main display, 2 = secondary and so on

%% ~~ Check and adjust orientation ~~
% Adjust the atlas to one slice (using arrow keys to navigate in the allen ccf and pressing eneter once you're happy)
% and this transformation will then be applied to all other slices and saved in a histology_ccf.mat file.
% If you register several slices, the average transform will be applied to
% all other slices and saved.
bd_checkAndCorrectAtlasOrientation(tv, av, st, registeredImage, outputDir, screenToUse);

%% ~~ Check adjust border alignement/scaling ~~
bd_checkAndCorrectAtlasAlignment(tv, av, st, registeredImage, outputDir, screenToUse)
% histology_ccf.mat : corresponding CCF slices
% atlas2histology_tform.mat : ccf to histology alignement/warp

%% ~ Draw probes + adjust probe fits ~
transformedImageDir = dir([outputDir, filesep, 'downsampled_standard_*.tiff']);
transformedImage = loadtiff([transformedImageDir.folder, filesep, transformedImageDir.name]);
bd_drawProbes_bezierCurves(tv, av, st, transformedImage, outputDir, screenToUse)

%% ~ Assign probes to days/sites ~
load([outputDir, '/probe_ccf.mat'])
bd_plotHistoPerMouse(outputDir, st);

% plot and assign
probe2ephys = struct;
probe2ephys(1).day = 5;
probe2ephys(1).site = 1;
probe2ephys(1).shank = NaN;
probe2ephys(1).certainty = 0;

probe2ephys(2).day = 4; %4
probe2ephys(2).site = 1;
probe2ephys(2).shank = NaN;
probe2ephys(2).certainty = 0;

probe2ephys(3).day = 1; %1
probe2ephys(3).site = 1;
probe2ephys(3).shank = NaN;
probe2ephys(3).certainty = 0;

probe2ephys(4).day = 3; %3
probe2ephys(4).site = 1;
probe2ephys(4).shank = NaN;
probe2ephys(4).certainty = 1;

save([outputDir, '/probe2ephys.mat'], 'probe2ephys')

%% ~ Align ephys and histology ~

% run this section for each probe.
iProbe = 1
site = probe2ephys(iProbe).site;

% load data
curr_shank = shank;
lfp = NaN;

bd_alignEphysAndHistology_draggable(st, outputDir, ...
    spike_times, spike_templates, template_depths, ...
    spike_xdepths, template_xdepths, lfp, channel_positions(:, 2), channel_positions(:, 1), ...
    iProbe, isSpikeGlx, shank);

%% ~ Various useful plotting functions ~
% plot/generate a video of all your probe tracks across mice

% plot/generate a video all probe tracks in certain regions, across mice

% plot a brain outline with certain brain regions